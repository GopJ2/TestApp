// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApp.Data;

namespace TestApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = "f14f0184-0b15-431f-b4e3-853224eed6dd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample C# Tests",
                            UserId = "a8a4828c-60f0-4f99-bbe6-229df1d098a2"
                        },
                        new
                        {
                            Id = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample LINQ Tests",
                            UserId = "ce40ea29-e665-4a37-858b-e7d2359cdd4f"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestAnswer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = "683ede9f-0a9f-4925-b3ba-ef36e92bcc97",
                            AnswerText = "public static void Program()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "39b5135e-661c-4ebb-8853-8240f9389264",
                            AnswerText = "public static void Main()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "8f7c88df-cb57-4645-bc3a-0507a760de1a",
                            AnswerText = "public static void main()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "5ca07b23-5dca-434f-808d-43de8d309f05",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "acb0bcf9-42c5-4bee-8228-28264373c9dc",
                            AnswerText = "Int32",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "d13aff12-4437-47ed-9478-fdaa7bdfcb5c",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "85e27706-0d0c-4dfb-a6eb-57887f45fe3e",
                            AnswerText = "Decimal",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "67748d96-0cd2-480d-a9a9-601a7ff2afe4",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "e3c2b7a7-3639-4a99-bb10-b0fbfb4e113b",
                            AnswerText = "String",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "dc6ca413-1835-4e48-a199-f2ae1336cc38",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "091e92e6-2f8b-4883-bfbd-95a1f828825a",
                            AnswerText = "Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "a98bf1c7-da3c-4ac1-bbd0-456b1cc5f6c7",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "0d9e40e8-e6e2-4d8a-b220-54f3c6194088",
                            AnswerText = "It allows assignment of null to reference type.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "b52e84f5-66ca-4eec-b598-e25d611eec41",
                            AnswerText = "It allows assignment of null to value type.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "e76aea45-9c3c-4881-a09b-3cb15f1686f5",
                            AnswerText = "It allows assignment of null to static class.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "cd67e410-6e6b-47be-8f40-cb4986b513ae",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "f3a1e79f-012a-4a4a-8dd4-1043a04461c1",
                            AnswerText = "Reference type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "f73bd6a2-63f9-40ab-80fc-2068e39b2f4a",
                            AnswerText = "Value type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "3dd30000-c984-4da2-853e-50883ec57511",
                            AnswerText = "Class type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "b787046b-927d-4f7c-9fee-755493309ded",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "2d4a85cc-4b52-464e-b98d-a629d4b7a15a",
                            AnswerText = "Link-List Inner Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "04c0fd32-1faa-46ba-be34-26ff3b366907",
                            AnswerText = "Language-Integrated Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "0851b621-1f32-4830-bb40-97f6abf3c99a",
                            AnswerText = "Linked-Integrated Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "552f785c-ea77-4e59-9663-79554c1b3264",
                            AnswerText = "Lazy Integration Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "b7fe413e-71ef-4888-b143-6248234b9c37",
                            AnswerText = "C# and F#",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "43382414-dafc-4ab6-9e52-285b181bb4c1",
                            AnswerText = "VB and F#",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "d08efed2-5d0e-44d9-9062-251a19ef7981",
                            AnswerText = "C# and VB",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "7e1f1422-bf51-46fc-9d31-adc13a27a945",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "70a3595e-c50d-435a-8156-8966e222ddf0",
                            AnswerText = "Object collection",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "80ddb8a6-e75e-4002-a6ab-7463493cce0c",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "0fa7b141-e3d7-4684-b728-f00c38358d01",
                            AnswerText = "Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "21117ef6-eb49-4909-8e62-418e4e7183d4",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "116f112a-6594-4077-99fe-36ae33664b6d",
                            AnswerText = "LINQ API is a bunch of extension methods included in System.Linq.Enumerable and System.Linq.Queryable class.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "1abba0fa-9d99-4b73-9a6d-1de7bd5b09c3",
                            AnswerText = "LINQ API is a bunch of abstract methods included in Enumerable and Queryable classes.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "0728a87e-0324-4700-aab1-6a2a6367427b",
                            AnswerText = "LINQ API is bunch of queries written in C# and VB.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "a1848660-c2da-4367-b30b-c704bfa1a3aa",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestQuestion");

                    b.HasData(
                        new
                        {
                            Id = "3185b7d6-85b1-4866-8fe2-e287965b841f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following methods is an entry point in the C# console program?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "27669b19-c256-4065-a7b5-432bb44da2c7",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the followings are value types in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following is a reference type in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "What is the nullable type in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Struct is a _____.",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "5e56ae65-891b-4f87-a5b1-37a9798b2e53",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "The full form of LINQ is _______.",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "59ecff8a-3952-48c0-870b-59db1f6b060a",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "LINQ supports ________ syntax.",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "698f456f-f913-4858-9be2-f5184bc5944a",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following supports LINQ queries?",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "127d9f22-064a-4470-8b03-d7c4b85948ef",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following statement is TRUE?",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Users.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = "ce40ea29-e665-4a37-858b-e7d2359cdd4f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TestUser@gmail.com",
                            Password = "yP7xXNBu/Hny3XSz7QCNjOgkM7HOkPgVFiXTPr5dwTg="
                        },
                        new
                        {
                            Id = "a8a4828c-60f0-4f99-bbe6-229df1d098a2",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TestUser2@gmail.com",
                            Password = "yP7xXNBu/Hny3XSz7QCNjOgkM7HOkPgVFiXTPr5dwTg="
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Users.AppUser", "User")
                        .WithMany("Tests")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestAnswer", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Tests.TestQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Tests.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Users.AppUser", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
