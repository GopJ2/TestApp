// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApp.Data;

namespace TestApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tests");

                    b.HasData(
                        new
                        {
                            Id = "f14f0184-0b15-431f-b4e3-853224eed6dd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample C# Tests Description",
                            Name = "C# Test",
                            UserId = "ce40ea29-e665-4a37-858b-e7d2359cdd4f"
                        },
                        new
                        {
                            Id = "b5902bf9-bea2-4fac-96bc-52c0ed52e6c7",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample Node.js Tests",
                            Name = "Node.js Test",
                            UserId = "ce40ea29-e665-4a37-858b-e7d2359cdd4f"
                        },
                        new
                        {
                            Id = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample LINQ Tests",
                            Name = "LINQ Test",
                            UserId = "a8a4828c-60f0-4f99-bbe6-229df1d098a2"
                        },
                        new
                        {
                            Id = "c23f9ea6-50a9-417c-89bb-15194cc2787b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sample Javascript Tests",
                            Name = "Vanilla JS Test",
                            UserId = "a8a4828c-60f0-4f99-bbe6-229df1d098a2"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestAnswer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = "00b6a320-3940-402a-9883-0d562f1c2f98",
                            AnswerText = "public static void Program()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "ef3136cc-fcdf-4e7e-8444-e07d221e18c2",
                            AnswerText = "public static void Main()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "09e99bee-b2c4-4927-9c65-26bd62bb36fe",
                            AnswerText = "public static void main()",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "bf7c693c-d6d1-406e-ae89-d243865c5a43",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "3185b7d6-85b1-4866-8fe2-e287965b841f"
                        },
                        new
                        {
                            Id = "c1cd5444-a65d-4e33-9050-208ec88c9805",
                            AnswerText = "Int32",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "f8ff703c-1fd8-4f10-b662-30661cb3c870",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "51e7a3b7-c90e-4a14-8f93-aefeb4174993",
                            AnswerText = "Decimal",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "2e7e27fa-4369-4b24-ac9a-8e39ea073895",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "27669b19-c256-4065-a7b5-432bb44da2c7"
                        },
                        new
                        {
                            Id = "9162071d-768f-4563-8d74-1a1f6c0c05df",
                            AnswerText = "String",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "bfccf393-e4f8-41a5-9e22-cf1335aa472d",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "3a371e83-3874-4f47-940d-9f40d11d3e3a",
                            AnswerText = "Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "dc051ff9-0deb-446a-ac78-d4907e43078f",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05"
                        },
                        new
                        {
                            Id = "4c08338b-e0f1-41a7-8988-a9d240b85d5b",
                            AnswerText = "It allows assignment of null to reference type.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "d864185d-97b3-417a-892b-7a29455b90e5",
                            AnswerText = "It allows assignment of null to value type.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "889ed162-b77a-4e7e-bd29-882486bbf168",
                            AnswerText = "It allows assignment of null to static class.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "7961ce25-8887-497e-9b11-25657902f057",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4"
                        },
                        new
                        {
                            Id = "10533958-cf56-4868-8103-785791835046",
                            AnswerText = "Reference type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "6ad7dff2-12f8-44f9-91f7-29e701c49bbe",
                            AnswerText = "Value type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "b9924313-5ec7-482f-bdd0-3b7f757c4b50",
                            AnswerText = "Class type",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "88aff19b-1eb3-49cc-a531-2589875c5900",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4"
                        },
                        new
                        {
                            Id = "c8b9035c-9bf0-43c3-81e0-0f514cc68c56",
                            AnswerText = "Link-List Inner Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "f2cc79d5-e09a-4fd1-a309-0ab76930080e",
                            AnswerText = "Language-Integrated Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "9ec8eada-e1e6-4076-9703-e578e5508055",
                            AnswerText = "Linked-Integrated Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "22333f93-cc7b-4a33-8b8f-8e8c7249d118",
                            AnswerText = "Lazy Integration Query",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "5e56ae65-891b-4f87-a5b1-37a9798b2e53"
                        },
                        new
                        {
                            Id = "22a92b49-45d8-4bd1-9fc8-f4237bf91e59",
                            AnswerText = "C# and F#",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "20a6505d-24b8-46f8-944a-9791a164e24b",
                            AnswerText = "VB and F#",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "c4163c84-f5e9-468a-92c5-0a50f35eb1e8",
                            AnswerText = "C# and VB",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "fa132b69-e740-433c-af31-7dfc9be1dbdc",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "59ecff8a-3952-48c0-870b-59db1f6b060a"
                        },
                        new
                        {
                            Id = "622fffc8-a8fa-4ab3-ab98-838072958bf7",
                            AnswerText = "Object collection",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "7e44084e-fa5e-4be3-8f27-158d2b4cf1db",
                            AnswerText = "Double",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "cb065ff5-63b4-4e07-8738-d8e8afb11cce",
                            AnswerText = "Long",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "1ac42230-c05a-4e84-948a-3aa80ef3cd4e",
                            AnswerText = "All the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "698f456f-f913-4858-9be2-f5184bc5944a"
                        },
                        new
                        {
                            Id = "35223d3d-b9a9-4937-bb2e-17db43ba8c09",
                            AnswerText = "LINQ API is a bunch of extension methods included in System.Linq.Enumerable and System.Linq.Queryable class.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "19fdf0b4-056e-47fe-8492-316083a5bb7d",
                            AnswerText = "LINQ API is a bunch of abstract methods included in Enumerable and Queryable classes.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "a9dc1df5-1e10-4cd2-9320-0f9b29dad640",
                            AnswerText = "LINQ API is bunch of queries written in C# and VB.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "9a93841c-ba29-41d2-bbc5-17509b775cfe",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "127d9f22-064a-4470-8b03-d7c4b85948ef"
                        },
                        new
                        {
                            Id = "9406536a-b102-4f99-b6e5-096a079e3bb0",
                            AnswerText = "Client",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d414b-0a84-4961-9049-52b6c1756047"
                        },
                        new
                        {
                            Id = "0cb8e21f-468b-45a9-862c-d270cb781b34",
                            AnswerText = "Server",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "cf8d414b-0a84-4961-9049-52b6c1756047"
                        },
                        new
                        {
                            Id = "fb4ed8f5-bd3d-4a7e-ae96-bc7ea703334b",
                            AnswerText = "Both, server and client",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d414b-0a84-4961-9049-52b6c1756047"
                        },
                        new
                        {
                            Id = "91361bde-fd1d-4dcb-8a42-62fa8ca924dd",
                            AnswerText = "Browser",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d414b-0a84-4961-9049-52b6c1756047"
                        },
                        new
                        {
                            Id = "fc5f46c4-769f-421c-b3f0-b8de6babcf63",
                            AnswerText = "Synchronous",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d123f-0a84-4961-f029-12h6x1756047"
                        },
                        new
                        {
                            Id = "4d7592d2-8f1d-405d-bef9-9f51e40f84ab",
                            AnswerText = "Multi-threaded",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d123f-0a84-4961-f029-12h6x1756047"
                        },
                        new
                        {
                            Id = "40a2d3f2-8bf8-4cd7-90c2-3f82843239b0",
                            AnswerText = "Asynchronous",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "cf8d123f-0a84-4961-f029-12h6x1756047"
                        },
                        new
                        {
                            Id = "25fc59e9-e0ad-4f7e-8641-9c29cf5a9131",
                            AnswerText = "None of the above",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "cf8d123f-0a84-4961-f029-12h6x1756047"
                        },
                        new
                        {
                            Id = "e5230b4c-3aee-4558-943d-5801ab60b5e7",
                            AnswerText = "Windows",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "692235e8-1fb5-449e-9d43-b1a807cf3ca6"
                        },
                        new
                        {
                            Id = "fdcc795f-0ff8-43c5-9008-9847d78f556c",
                            AnswerText = "Mac",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "692235e8-1fb5-449e-9d43-b1a807cf3ca6"
                        },
                        new
                        {
                            Id = "b6e193de-e731-4790-af11-fcf08d3bcd1c",
                            AnswerText = "Unix/Linux",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "692235e8-1fb5-449e-9d43-b1a807cf3ca6"
                        },
                        new
                        {
                            Id = "84395c79-3f8b-44b6-abe4-07a65dca7433",
                            AnswerText = "All",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "692235e8-1fb5-449e-9d43-b1a807cf3ca6"
                        },
                        new
                        {
                            Id = "d7127099-8fe8-4c91-ba4f-547d7ee43c8a",
                            AnswerText = "Testing node.js/JavaScript expressions",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "0508062a-da04-4349-9832-113b1405cfff"
                        },
                        new
                        {
                            Id = "8a51a2ee-a42e-49c2-bdd2-2c1fd3c0324c",
                            AnswerText = "Executing browser’s JavaScript expressions.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0508062a-da04-4349-9832-113b1405cfff"
                        },
                        new
                        {
                            Id = "ad0bca29-b669-4da2-ac09-adf8b2d8c1d7",
                            AnswerText = "The preview of node.js application.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0508062a-da04-4349-9832-113b1405cfff"
                        },
                        new
                        {
                            Id = "1c92d6b2-e0de-41a3-8000-38eeb6eb9b9b",
                            AnswerText = "None of the above.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "0508062a-da04-4349-9832-113b1405cfff"
                        },
                        new
                        {
                            Id = "fdb4f948-2c6e-4dd5-99fb-747601ea0186",
                            AnswerText = "True",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "1834f0be-b24e-47cf-b609-d5c184cb6a02"
                        },
                        new
                        {
                            Id = "a067d682-297f-4a0d-b6e2-fee28020934d",
                            AnswerText = "False",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "1834f0be-b24e-47cf-b609-d5c184cb6a02"
                        },
                        new
                        {
                            Id = "94da67c1-e633-4b4c-9008-abc7a4b34a9c",
                            AnswerText = "<JavaScript></JavaScript>",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b997c953-a860-4a0d-a403-ec689ff60d46"
                        },
                        new
                        {
                            Id = "2f8a01ee-d417-49d3-b794-f2c8ac51574a",
                            AnswerText = "<script></script>",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "b997c953-a860-4a0d-a403-ec689ff60d46"
                        },
                        new
                        {
                            Id = "9bb0cf8f-13f2-4bae-bea7-725aeba678ba",
                            AnswerText = "<code></code>",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b997c953-a860-4a0d-a403-ec689ff60d46"
                        },
                        new
                        {
                            Id = "7b2b255d-3490-40af-81b9-e8ee9375b322",
                            AnswerText = "<head></head>",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "b997c953-a860-4a0d-a403-ec689ff60d46"
                        },
                        new
                        {
                            Id = "6c727e7e-3bd7-4b73-86fa-c24bd5c6ea37",
                            AnswerText = "new",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "6b119880-12e5-4510-aa14-83a51f94adb6"
                        },
                        new
                        {
                            Id = "d862e0f3-c591-4b3b-ae0b-24b2435b350a",
                            AnswerText = "int",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "6b119880-12e5-4510-aa14-83a51f94adb6"
                        },
                        new
                        {
                            Id = "b3beb7cc-4908-4f0b-a779-80fc3809698c",
                            AnswerText = "string",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "6b119880-12e5-4510-aa14-83a51f94adb6"
                        },
                        new
                        {
                            Id = "b333657b-6dbc-4f35-ac9c-f65520ca78a4",
                            AnswerText = "let/const",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "6b119880-12e5-4510-aa14-83a51f94adb6"
                        },
                        new
                        {
                            Id = "d4e94fed-de96-443e-b7b7-850a62a0e170",
                            AnswerText = "String",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "73eddcbd-5964-4d2c-ab8d-85dd0d6ed6cd"
                        },
                        new
                        {
                            Id = "8eaef720-cb19-486f-b9a7-9661f28ceccb",
                            AnswerText = "Number",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "73eddcbd-5964-4d2c-ab8d-85dd0d6ed6cd"
                        },
                        new
                        {
                            Id = "301773f2-73b7-4d84-aec6-ecc80fbb97e9",
                            AnswerText = "Boolean",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = false,
                            QuestionId = "73eddcbd-5964-4d2c-ab8d-85dd0d6ed6cd"
                        },
                        new
                        {
                            Id = "1351da42-0a07-4f08-8969-8fd3223de6cf",
                            AnswerText = "All",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCorrect = true,
                            QuestionId = "73eddcbd-5964-4d2c-ab8d-85dd0d6ed6cd"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestQuestion");

                    b.HasData(
                        new
                        {
                            Id = "3185b7d6-85b1-4866-8fe2-e287965b841f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following methods is an entry point in the C# console program?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "27669b19-c256-4065-a7b5-432bb44da2c7",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the followings are value types in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "b8ff191d-ccaa-4f3a-b447-acfc9ee7fc05",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following is a reference type in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "0ad888e5-3db1-422c-a5bf-d3fede49a6d4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "What is the nullable type in C#?",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "5a51d21e-5a17-4dc1-b892-e1abf27f92c4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Struct is a _____.",
                            TestId = "f14f0184-0b15-431f-b4e3-853224eed6dd"
                        },
                        new
                        {
                            Id = "5e56ae65-891b-4f87-a5b1-37a9798b2e53",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "The full form of LINQ is _______.",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "59ecff8a-3952-48c0-870b-59db1f6b060a",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "LINQ supports ________ syntax.",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "698f456f-f913-4858-9be2-f5184bc5944a",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following supports LINQ queries?",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "127d9f22-064a-4470-8b03-d7c4b85948ef",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the following statement is TRUE?",
                            TestId = "91b1aa6d-bd4a-43e0-ad89-e672709e35fe"
                        },
                        new
                        {
                            Id = "cf8d414b-0a84-4961-9049-52b6c1756047",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Node.js runs on __________",
                            TestId = "b5902bf9-bea2-4fac-96bc-52c0ed52e6c7"
                        },
                        new
                        {
                            Id = "cf8d123f-0a84-4961-f029-12h6x1756047",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Node.js is ________ by default.",
                            TestId = "b5902bf9-bea2-4fac-96bc-52c0ed52e6c7"
                        },
                        new
                        {
                            Id = "692235e8-1fb5-449e-9d43-b1a807cf3ca6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Node.js supports which of the following platform?",
                            TestId = "b5902bf9-bea2-4fac-96bc-52c0ed52e6c7"
                        },
                        new
                        {
                            Id = "0508062a-da04-4349-9832-113b1405cfff",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Node.js terminal (REPL) is used for _________.",
                            TestId = "b5902bf9-bea2-4fac-96bc-52c0ed52e6c7"
                        },
                        new
                        {
                            Id = "1834f0be-b24e-47cf-b609-d5c184cb6a02",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "JavaScript is ECMAScript",
                            TestId = "c23f9ea6-50a9-417c-89bb-15194cc2787b"
                        },
                        new
                        {
                            Id = "b997c953-a860-4a0d-a403-ec689ff60d46",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "JavaScript written under which of the following tag?",
                            TestId = "c23f9ea6-50a9-417c-89bb-15194cc2787b"
                        },
                        new
                        {
                            Id = "6b119880-12e5-4510-aa14-83a51f94adb6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "A variable in JavaScript declared with which of the following keyword?",
                            TestId = "c23f9ea6-50a9-417c-89bb-15194cc2787b"
                        },
                        new
                        {
                            Id = "73eddcbd-5964-4d2c-ab8d-85dd0d6ed6cd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionText = "Which of the followings are primitive data types in JavaScript?",
                            TestId = "c23f9ea6-50a9-417c-89bb-15194cc2787b"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Users.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = "ce40ea29-e665-4a37-858b-e7d2359cdd4f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TestUser@gmail.com",
                            Password = "yP7xXNBu/Hny3XSz7QCNjOgkM7HOkPgVFiXTPr5dwTg="
                        },
                        new
                        {
                            Id = "a8a4828c-60f0-4f99-bbe6-229df1d098a2",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TestUser2@gmail.com",
                            Password = "yP7xXNBu/Hny3XSz7QCNjOgkM7HOkPgVFiXTPr5dwTg="
                        });
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Users.AppUser", "User")
                        .WithMany("Tests")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestAnswer", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Tests.TestQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.HasOne("TestApp.Data.Entity.Tests.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.Test", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Tests.TestQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("TestApp.Data.Entity.Users.AppUser", b =>
                {
                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
